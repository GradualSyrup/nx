window.SIDEBAR_ITEMS = {"macro":[["bit","Gets a value corresponding to the given bit"],["bit_group","Constructs a `bit_enum` type value from various flags"],["cur_fn_name","Gets the current function name"],["define_bit_enum","Defines a type meant to serve as a bitflag enum-like type"],["diag_assert",""],["diag_log",""],["diag_log_assert",""],["diag_result_code_log_assert",""],["diag_result_log_assert",""],["ipc_client_define_object_default","Simplifies the creation of a (client-side IPC) type implementing an IPC interface"],["ipc_client_send_control_command","Identical to [`ipc_client_send_request_command`] but for a “Control” command"],["ipc_client_send_request_command","Sends an IPC “Request” command"],["ipc_sf_define_control_interface_trait","Identical to [`ipc_sf_define_interface_trait`] but for “Control” IPC interfaces (inner trait functionality differs)"],["ipc_sf_define_interface_trait","Defines a trait meant to be used for IPC interfaces"],["ipc_sf_object_impl_default_command_metadata","Macro to simplify defining an IPC interface impl command metadata"],["nul","Creates a NUL-terminated string literal"],["read_bits","Reads bits from a given value"],["result_define","Creates a result definition"],["result_define_group","Creates a group of result definitions (all under the same module)"],["result_define_subgroup","Creates a group of result definitions (all under the same module and submodule)"],["result_return_if","Returns a given result if the given condition is true"],["result_return_unless","Returns a given result unless the given condition is true"],["result_try","Wraps and returns a given result if it’s not successful"],["rrt0_define_default_module_name","Defines the (runtime) module name of the current project as the package name"],["rrt0_define_module_name","Defines the (runtime) module name of the current project"],["write_bits","Writes bits into a given value"]],"mod":[["arm","ARM support and utils"],["crypto","Hardware-accelerated crypto support"],["diag","Diagnostics (logging and aborting) support"],["elf","ELF (aarch64) support and utils"],["fs","FileSystem support"],["gpu","Graphics and GPU support and utils"],["hbl","HBL (homebrew loader) ABI support and utils"],["input","Input utils and wrappers"],["ipc",""],["la","Library applet support and utils"],["macros","Library macros"],["mem","Memory (heap) support and utils"],["rand","Pseudo-RNG support"],["rc","Generic library result definitions"],["result","Common result support"],["rrt0","Initial code/entrypoint support and utils"],["service","Base service/named port support and wrappers"],["smc","Secure monitor support and wrappers"],["svc",""],["sync","Synchronization support and utils"],["thread","Threading support and wrappers"],["util","Common library utilities"],["version","System version utils"],["vmem","Virtual memory support"],["wait","Sync/waiting utilities and wrappers"]]};
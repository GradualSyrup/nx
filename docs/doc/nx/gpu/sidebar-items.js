window.SIDEBAR_ITEMS = {"constant":[["BLOCK_HEIGHT","Represents the block height"],["BLOCK_HEIGHT_LOG2","Represents the base-2 log value of the block height"],["SCREEN_HEIGHT","Represents the screen height"],["SCREEN_WIDTH","Represents the screen width"]],"enum":[["ColorFormat","Represents supported color formats"],["ConnectionApi","Represents connection APIs"],["DisconnectMode","Represents disconnect modes"],["DisplayScanFormat","Represents display scan format types"],["Kind","Represents kinds"],["LayerZ","Represents a layer Z value"],["Layout","Represents layout types"],["NvDrvServiceKind","Represents `nvdrv:*` service kinds"],["PixelFormat","Represents supported pixel formats"],["Transform","Represents a transform type"],["ViServiceKind","Represents `vi:*` service kinds"]],"fn":[["align_height","Aligns a height value"],["align_width","Aligns a width value"],["calculate_bpp","Gets the bits-per-pixel (`bpp`) of a [`ColorFormat`] value"],["convert_nv_error_code","Converts [`ErrorCode`][`nv::ErrorCode`] to a regular [`Result`]"]],"mod":[["binder","Binder support and utils"],["ioctl","`ioctl` command definitions and support"],["parcel","Parcel support and utils"],["rc","GPU-specific result definitions"],["surface","Surface (gfx wrapper) implementation"]],"struct":[["Context","Represents a graphics context"],["Fence","Represents a fence layout"],["GraphicBuffer","Represents a graphic buffer layout"],["GraphicBufferHeader","Represents a graphic buffer header layout"],["GraphicsAllocatorUsage","Represents allocator usage flags"],["MultiFence","Represents a multiple fence layout"],["Plane","Represents a plane layout"],["QueueBufferInput","Represents a queue buffer input layout"],["QueueBufferOutput","Represents a queue buffer output layout"],["Rect","Represenrs a rectangle layout"]]};